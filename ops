{"version":1,"ops":[{"type":3,"author":{"id":"3c87de25ab8b2ec3449081ec888ea2a273bb79fc"},"timestamp":1521840341,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM3NTgwMjcxMw==","github-url":"https://github.com/firecat53/keepmenu/issues/7#issuecomment-375802713"},"message":"I'm not sure what your goal is here. You can already use rofi instead of dmenu...what added benefits come from making a rofi mod script? Genuinely curious :smile:","files":null},{"type":3,"author":{"id":"3c87de25ab8b2ec3449081ec888ea2a273bb79fc"},"timestamp":1521844695,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM3NTgxNjQ4Nw==","github-url":"https://github.com/firecat53/keepmenu/issues/7#issuecomment-375816487"},"message":"I did some research on Rofi and I think I see what you're after. However...this would require some potententially significant work to implement. Keepmenu is just not structured to be able to easily dump a list like you're looking for into Rofi. There are too many embedded calls to dmenu/rofi to make this a simple matter. Perhaps with a single database and the password entered into config.ini you could hack together something that might work.\n\nI'd be willing to entertain a pull request adding this feature so I'll leave this open for now if you're interested in working on it.\n\nThanks!","files":null},{"type":3,"author":{"id":"c70b78504189042cfbbc12f0500081b132f90bde"},"timestamp":1521847674,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM3NTgyNDE2MA==","github-url":"https://github.com/firecat53/keepmenu/issues/7#issuecomment-375824160"},"message":"Well the list of entries is a nice to have one could always just save the names of all entries somewhere else. The more important point is to get keepmenu to autotype an entry based on some input. I guess the name or some sort of ID would be applicable.\n\nAlso the returns are quite deminishing. The only thing really is having only one hotkey.","files":null},{"type":3,"author":{"id":"f06177fafc3be596eb8ae669d88e704f3bec70f8"},"timestamp":1585773909,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwNzQ4MDc3OA==","github-url":"https://github.com/firecat53/keepmenu/issues/7#issuecomment-607480778"},"message":"I'll have a look at this. I'm a big fan of rofi, too, and I'd like to have separate shortcuts to auto-type, copy username, copy password, and look at the notes section of an entry as well.","files":null},{"type":3,"author":{"id":"f06177fafc3be596eb8ae669d88e704f3bec70f8"},"timestamp":1585784368,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwNzU0MTc5Nw==","github-url":"https://github.com/firecat53/keepmenu/issues/7#issuecomment-607541797"},"message":"Ok so I've done a bit of digging through your code and the rofi docs, and it seems like there is two things to implement here:\n\nFirst, what this issue is about, which is making keepmenu a compatible rofi mode. Rofi mods work in such a way that rofi calls your script, and you print a list of newline separated entries. Then, when the user makes a selection, rofi will again call your script, with the final argument being the selected entry. So, a rofi user could specify their modi like this:\n\n    modi \"run,window,pass:keepmenu\";\n\nSo when the user wants to start the mode \"pass\", `keepmenu` will be launched, without any arguments. When the user then selects entry \"Edit entries\", `keepmenu \"Edit entries\"` will be launched. We have to know whether keepmenu was launched from terminal or by rofi, but that is relatively straight-forward using psutil:\n\n    import os, psutil\n    p = psutil.Process(os.getpid())\n    print(p.parent().name())\n\nIf I run this from terminal, it prints `zsh`, when I put it in a file and run `rofi -modi experiment:\"./experiment.py rofi\" -show experiment`, it shows `systemd` as its only entry.\n\nUsing that info, we can alter the behaviour of keepmenu to just print out all its entries and then exit instead of returning at the end of `view_all_entries()`, and then, when keepmenu is called with an argument, we skip calling `view_all_entries()` in `dmenu_run()` and instead make the argument we got our selection. From there, we can resume like normal.\n\nRofi actually has quite a few other features (like pressing Esc for going back to the last menu, or other fun shortcuts that get passed to you as exit codes) as well that I'd love to implement here, because I feel they would really enhance the usability of this tool.","files":null},{"type":6,"author":{"id":"f06177fafc3be596eb8ae669d88e704f3bec70f8"},"timestamp":1585784368,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzYyMzE3MTYw"},"target":"59b140197d65ba584c593b85ea72f93217b4e495752d5ca7a1f0c588f5f670ea","message":"Ok so I've done a bit of digging through your code and the rofi docs, and it seems like there is two things to implement here:\n\nFirst, what this issue is about, which is making keepmenu a compatible rofi mode. Rofi mods work in such a way that rofi calls your script, and you print a list of newline separated entries. Then, when the user makes a selection, rofi will again call your script, with the final argument being the selected entry. So, a rofi user could specify their modi like this:\n\n    modi \"run,window,pass:keepmenu\";\n\nSo when the user wants to start the mode \"pass\", `keepmenu` will be launched, without any arguments. When the user then selects entry \"Edit entries\", `keepmenu \"Edit entries\"` will be launched. We have to know whether keepmenu was launched from terminal or by rofi, but that is relatively straight-forward using psutil:\n\n    import os, psutil\n    p = psutil.Process(os.getpid())\n    print(p.parent().name())\n\nIf I run this from terminal, it prints `zsh`, when I put it in a file and run `rofi -modi experiment:\"./experiment.py rofi\" -show experiment`, it shows `systemd` as its only entry.\n\nUsing that info, we can alter the behaviour of keepmenu to just print out all its entries and then exit instead of returning at the end of `view_all_entries()`, and then, when keepmenu is called with an argument, we skip calling `view_all_entries()` in `dmenu_run()` and instead make the argument we got our selection. From there, we can resume like normal.\n\nRofi actually has quite a few other features (like pressing Esc for going back to the last menu, or other fun shortcuts that get passed to you as exit codes) as well that I'd love to implement here, because I feel they would really enhance the usability of this tool. But let's go for the mod first :)","files":null},{"type":3,"author":{"id":"f06177fafc3be596eb8ae669d88e704f3bec70f8"},"timestamp":1585861191,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwODA4NjcyMQ==","github-url":"https://github.com/firecat53/keepmenu/issues/7#issuecomment-608086721"},"message":"Alright, I give up (already). To provide this functionality would require much more than I initially assumed, and I don't think it's worth it. The first instantiation would have fork the Server as a real daemon so the main function can exit after printing out the menu, and the server would have to send the output to the client instead of running dmenu itself, and then wait for a new client to give it the selected entry, which leads to handling all sorts of special cases.\n\nNo, I'm very certain that this is not going to happen. However, the extended functionality of rofi -dmenu is very intriguing, so I'll have a go at that.","files":null},{"type":3,"author":{"id":"c70b78504189042cfbbc12f0500081b132f90bde"},"timestamp":1585862492,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwODA5NjM4MA==","github-url":"https://github.com/firecat53/keepmenu/issues/7#issuecomment-608096380"},"message":"@IFreilicht if you're interested in custom rofi mods. I did one very simple web modi where I could open websites directly in firefox via rofi making use of elvi. You can take a look at it here https://github.com/AichP/archz/tree/master/.config/rofi.","files":null},{"type":3,"author":{"id":"f06177fafc3be596eb8ae669d88e704f3bec70f8"},"timestamp":1585928450,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwODUxMjgwOQ==","github-url":"https://github.com/firecat53/keepmenu/issues/7#issuecomment-608512809"},"message":"Thanks! Yeah I really like the idea of those, did some experiments and it seems like a neat idea, don't really know what to do with them yet though.","files":null},{"type":3,"author":{"id":"3c87de25ab8b2ec3449081ec888ea2a273bb79fc"},"timestamp":1585946980,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwODY1MTUwNQ==","github-url":"https://github.com/firecat53/keepmenu/issues/7#issuecomment-608651505"},"message":"It seems like creating a rofi mod for keepass is definitely doable, but not with the current codebase (as both @iFreilicht and I have discovered). I'm not really inclined to do a rewrite, so I think I'm going to close this issue as not fixable. Feel free to re-open if someone has a better/different idea. Thanks for all of your interest!!","files":null},{"type":4,"author":{"id":"3c87de25ab8b2ec3449081ec888ea2a273bb79fc"},"timestamp":1585946980,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MzE5Nzk2MTkxNw=="},"status":2}]}