{"version":1,"ops":[{"type":3,"author":{"id":"3c87de25ab8b2ec3449081ec888ea2a273bb79fc"},"timestamp":1553465082,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ3NjAwNTE2Ng==","github-url":"https://github.com/firecat53/keepmenu/issues/30#issuecomment-476005166"},"message":"I see what you're interested in doing, but I think that is adding way more complexity and potential for breakage to the script than is warranted.\n\nHow about using something like [GNU Stow](https://alexpearce.me/2016/02/managing-dotfiles-with-stow/) to manage your dotfiles and use a different config file for different machines. Example:\n\n    ~/.dotfiles\n    ├── laptop-keepmenu\n    │      └── .config\n    │          └── keepmenu\n    │              └── config.ini\n    └── desktop-keepmenu\n           └── .config\n               └── keepmenu\n                   └── config.ini\n\n     cd ~/.dotfiles\n     stow laptop-keepmenu\n\nNow there will be a symlink created from\n`~/.dotfiles/laptop-keepmenu/.config/keepmenu/config.ini` to\n`~/.config/keepmenu/config.ini`. Repeat for desktop-keepmenu on your desktop.\nThere are a bunch of ways to manage different configurations, any of which will\nbe a better option for you in the long run for all of your dotfile needs.","files":null},{"type":3,"author":{"id":"2dbd4e3eb4885ba122fe44cb65f4e41c3608b66f"},"timestamp":1553539892,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ3NjMzMTE5Mw==","github-url":"https://github.com/firecat53/keepmenu/issues/30#issuecomment-476331193"},"message":"I already use `stow` to manage my dotfiles (the repo I haved named `dotfiles`\nis something I forked once and forgot). It is however, not the solution as I\nsee it. The reason I'm averse to having multiple files / configurations in\nmy dotfiles for a single program is that I used to do so in my previous setup,\nwhere I'd have different git branches per machine. That was tedious to maintain,\nso I decided on moving to a one-repo-for-all approach. That is why I am averse\nto using stow in the manner you have proposed.\n\nAs i've stated before, it is possible to make a dmenu wrapper script; but\nhaving a single-line script is not a script that is strictly necessary, and\nthus should not be.\n\nOn a more philosophical level, it may not be a good idea to parse and edit user\ninput, as it is unpredictable; becasue the meaning of \"dmenu_command\" is vague\nand will be interpreted differently by different users, as with me trying to\nrun `sh -c dmenu` as my dmenu_command.\n\nBy the way, it doesn't look like the options `fn`, `nb`, `sf`, `sb`, `sf`, `b`,\nand `m` are used for other purposes than being parsed by dmenu_cmd. As they can\nall be set in dmenu_command, they might as well not be there to be configured,\nas it adds extra options and a bit extra code on keepmenu's side. The exception\nto this is `l`, which is used by keepmenu outside of dmenu_cmd.","files":null}]}