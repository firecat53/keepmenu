{"version":1,"ops":[{"type":1,"author":{"id":"44a0b218d7393260eaabc9384444164cde6f064d"},"timestamp":1553723240,"metadata":{"github-id":"MDU6SXNzdWU0MjYxOTg0Mzk=","github-url":"https://github.com/firecat53/keepmenu/issues/32","origin":"github"},"title":"[request] allow for environment variables in config","message":"I would like to include environment variables in the config.ini file. I often find myself adding a bunch of long filepaths or complicated variables that might change in the future, so this would be really convenient for me.\n\nFor example:\n\n```[some_section]\nmain_folder = $HOME/main\nmountain_picture = $WALLPAPERS/mountain.jpg```\n\nI already have an idea of how you could accomplish this. Basically, you could just subclass BasicInterpolation and just expand the variables before the value is accessed:\n\n```\nimport configparser, os\nclass EnvInterpolation(configparser.BasicInterpolation):\n\n    def before_get(self, parser, section, option, value, defaults):\n        return os.path.expandvars(value)\n```\n\nAnd then you would just initialize the config parser as:\n\n`parser = configparser.ConfigParser(interpolation=EnvInterpolation())`\n\nYou could even subclass ExtendedInterpolation if you want the user to access variables from other sections (although the interpolation syntax is a bit different). I would really appreciate if you did this.","files":null}]}